cmake_minimum_required(VERSION 3.10)
project(YOLOSegmentationTest)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find required packages
find_package(OpenCV REQUIRED)
find_package(PkgConfig REQUIRED)

# Find ONNX Runtime
find_path(ONNXRUNTIME_INCLUDE_DIR onnxruntime_cxx_api.h
    PATHS /usr/include /usr/local/include /opt/onnxruntime/include
    DOC "ONNX Runtime include directory"
)

find_library(ONNXRUNTIME_LIBRARY
    NAMES onnxruntime
    PATHS /usr/lib /usr/local/lib /opt/onnxruntime/lib
    DOC "ONNX Runtime library"
)

if(NOT ONNXRUNTIME_INCLUDE_DIR OR NOT ONNXRUNTIME_LIBRARY)
    message(FATAL_ERROR "ONNX Runtime not found. Please install it or set ONNXRUNTIME_INCLUDE_DIR and ONNXRUNTIME_LIBRARY")
endif()

# Include directories
include_directories(${OpenCV_INCLUDE_DIRS})
include_directories(${ONNXRUNTIME_INCLUDE_DIR})
include_directories(${CMAKE_SOURCE_DIR})

# Add debug flag
add_definitions(-DDEBUG)

# Create executable
add_executable(test_segmentation_onnx test_segmentation_onnx.cpp src/ia/YOLOSegmentation.cpp)

# Link libraries
target_link_libraries(test_segmentation_onnx ${OpenCV_LIBS} ${ONNXRUNTIME_LIBRARY})

# Set compiler flags
target_compile_options(test_segmentation_onnx PRIVATE -Wall -Wextra -O2)

# Copy model files to build directory
configure_file(${CMAKE_SOURCE_DIR}/chpt/best.onnx ${CMAKE_BINARY_DIR}/chpt/best.onnx COPYONLY)
configure_file(${CMAKE_SOURCE_DIR}/classes.txt ${CMAKE_BINARY_DIR}/classes.txt COPYONLY)

message(STATUS "OpenCV version: ${OpenCV_VERSION}")
message(STATUS "ONNX Runtime include: ${ONNXRUNTIME_INCLUDE_DIR}")
message(STATUS "ONNX Runtime library: ${ONNXRUNTIME_LIBRARY}") 